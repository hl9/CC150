I. Arrays and Strings
1. Hash Tables
2. ArrayList (Dynamically Resizing Array)
3. StringBuffer
Common Questions:
1. Check if a string has unique characters
2. check if a string is permutation of another
3. String compression aabcccccaaa -> a2b1c5a3
4. if string A substring of string B

II. Linked Lists
1. Create Linked List
class Node {
   Node next = null;
   int data;

   public Node(int n) {
      data = n;
   }
}
2. Delete a node from a Singly Linked List
3. Runner Technique (2 pointers, 2nd pointer moves twice as fast as the 1st pointer)
4. Recursive problems.
  Recursive algorithms take at least O(n) space.
Common Questions:
1. remove duplicates from an unsorted Linked List
2. Find the kth to last element of a singly linked list
3. Implement an algorithm to delete a node in the middle fo a singly linked list, given only access to that node.
4. Write code to partition a linked list around a value X, such that all nodes less than X come before all nodes greater than or equal to X.
